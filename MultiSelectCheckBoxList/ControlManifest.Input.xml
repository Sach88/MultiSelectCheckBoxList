<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="MultiSelectCheckBoxList" constructor="MultiSelectCheckBoxList" version="1.0.4" display-name-key="MultiSelectCheckBoxList" description-key="MultiSelectCheckBoxList description" control-type="standard" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <!--<property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />-->
    <property name="multiSelectJsonValues" display-name-key="Multi Select JSON Values" description-key="Selected values in JSON format" of-type="Multiple" usage="bound" />
    <property name="relatedEntityName" display-name-key="Related Entity Logical Name" description-key="Related entity Name" usage="input" of-type="SingleLine.Text" required="true"/>
    <property name="relatedEntityIdColumn" display-name-key="Related Entity Id Column" description-key="Related Entity Id Column" usage="input" of-type="SingleLine.Text" required="true" />
    <property name="relatedEntityNameColumn" display-name-key="Related Entity Name Column" description-key="Name column should be primaycolumn(name)" usage="input" of-type="SingleLine.Text" required="true" />
    <property name="relatedEntitySearchColumn1" display-name-key="related Entity Search Column1" description-key="related Entity Search Column1" usage="input" of-type="SingleLine.Text" required="true" />
    <property name="OptionsPlaceHolder" display-name-key="Field: Options Place Holder" description-key="Options Place Holder" usage="input" of-type="SingleLine.Text" required="true" />
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <css path="css/fontawesome.css" order="1" />      
      <css path="css/MultiSelectCheckBoxList.css" order="1" /> 
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <resx path="strings/MultiSelectCheckBoxList.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API -->
    <feature-usage>
      <!-- <uses-feature name="Device.captureAudio" required="true" />
       <uses-feature name="Device.captureImage" required="true" />
       <uses-feature name="Device.captureVideo" required="true" />
       <uses-feature name="Device.getBarcodeValue" required="true" />
       <uses-feature name="Device.getCurrentPosition" required="true" />
       <uses-feature name="Device.pickFile" required="true" />  -->
       <uses-feature name="Utility" required="true" />
       <uses-feature name="WebAPI" required="true" />
     </feature-usage> 
  </control>
</manifest>
